name: TrailAlerts Rules Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'lambdas/TrailAlertsCloudTrailAnalyzer/**'
      - 'rules/**'
      - '.github/workflows/trailalerts-cloudtrailanalyzer-rule-tests.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'lambdas/TrailAlertsCloudTrailAnalyzer/**'
      - 'rules/**'
      - '.github/workflows/trailalerts-cloudtrailanalyzer-rule-tests.yml'
  workflow_dispatch: 

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pyyaml
    
    - name: Run Sigma rule tests
      run: |
        cd lambdas
        python3 -m pytest TrailAlertsCloudTrailAnalyzer/tests/ -v
        
    - name: Generate test summary
      if: always()
      run: |
        cd lambdas
        
        # Create the summary markdown file
        echo "## Sigma Rules Test Summary" > sigma_test_summary.md
        echo "| Rule File | Status |" >> sigma_test_summary.md
        echo "| --- | --- |" >> sigma_test_summary.md
        
        # Test rules in the base rules directory
        if [ -d "../rules" ]; then
          for rule in $(find ../rules -maxdepth 1 -name "*.yml" -o -name "*.yaml"); do
            base=$(basename "$rule")
            echo "Testing rule: $base"
            
            if python -m pytest TrailAlertsCloudTrailAnalyzer/tests/test_sigma_matcher.py::test_each_rule_json["$rule"] -v > /dev/null 2>&1; then
              echo "| $base | ✅ Passed |" >> sigma_test_summary.md
            else
              echo "| $base | ❌ Failed |" >> sigma_test_summary.md
            fi
          done
        fi
        
        # Test rules in the sigma_rules subdirectory
        if [ -d "../rules/sigma_rules" ]; then
          for rule in $(find ../rules/sigma_rules -name "*.yml" -o -name "*.yaml"); do
            base=$(basename "$rule")
            echo "Testing rule: $base"
            
            if python -m pytest TrailAlertsCloudTrailAnalyzer/tests/test_sigma_matcher.py::test_each_rule_json["$rule"] -v > /dev/null 2>&1; then
              echo "| sigma_rules/$base | ✅ Passed |" >> sigma_test_summary.md
            else
              echo "| sigma_rules/$base | ❌ Failed |" >> sigma_test_summary.md
            fi
          done
        fi
        
        # Display the summary
        cat sigma_test_summary.md
        
        # Create the GitHub step summary
        cat sigma_test_summary.md >> $GITHUB_STEP_SUMMARY
        

